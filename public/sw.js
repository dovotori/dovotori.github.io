importScripts("/public/js/AssetsManager.js");const assetsManager=new AssetsManager,CACHE_NAME=assetsManager.cacheName,addResourcesToCache=async e=>{const s=await caches.open(CACHE_NAME);await s.addAll(e),console.log("[Service Worker] Precaching",e)};self.addEventListener("install",(e=>{console.log("[Service Worker] Install"),e.waitUntil(addResourcesToCache(assetsManager.cacheEntries))})),self.addEventListener("activate",(e=>{console.info("activate",e);const s=[CACHE_NAME];e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(-1===s.indexOf(e))return caches.delete(e)}))))))})),self.addEventListener("fetch",(e=>{console.info("fetch",e),e.respondWith(caches.match(e.request).then((s=>{if(s)return s;const t=e.request.clone();return fetch(t).then((t=>{if(!t||200!==t.status||"basic"!==t.type)return t;const a=s.clone();return caches.open(CACHE_NAME).then((s=>{s.put(e.request,a)})),s}))})))}));