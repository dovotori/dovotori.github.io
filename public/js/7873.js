"use strict";(self.webpackChunkdovotori_portfolio=self.webpackChunkdovotori_portfolio||[]).push([[7873],{77873:(e,n,o)=>{o.r(n),o.d(n,{funcInstancing:()=>t});var t="\nvec3 getFixedPosition(vec3 offset) {\n  vec2 newOffset = offset.xz;\n  newOffset = mod(newOffset - moving, 2.0); // 2 because terrain is between -1 and 1\n  newOffset = (newOffset * 0.5) * 2.0 - 1.0;\n  vec2 coord = newOffset +  moving;\n  float height = getNaturalHeight(coord);\n  return vec3(newOffset.x, height, newOffset.y);\n}\n\nvec4 getTerrainPosition(vec3 fixedPos, vec3 position) {\n  vec3 scaleLength = vec3(\n    length(model[0].xyz),\n    length(model[1].xyz),\n    length(model[2].xyz)\n  );\n\n  mat4 modelScale;\n  modelScale[0] = vec4(scaleLength.x, 0.0, 0.0, 0.0);\n  modelScale[1] = vec4(0.0, scaleLength.y, 0.0, 0.0);\n  modelScale[2] = vec4(0.0, 0.0, scaleLength.z, 0.0);\n  modelScale[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\n  vec3 offset = fixedPos; // * 2.0; // 2 scale\n\n  mat4 translation;\n  translation[0] = vec4(1.0, 0.0, 0.0, 0.0);\n  translation[1] = vec4(0.0, 1.0, 0.0, 0.0);\n  translation[2] = vec4(0.0, 0.0, 1.0, 0.0);\n  translation[3] = vec4(offset, 1.0);\n\n  mat4 scale;\n  scale[0] = vec4(size, 0.0, 0.0, 0.0);\n  scale[1] = vec4(0.0, size, 0.0, 0.0);\n  scale[2] = vec4(0.0, 0.0, size, 0.0);\n  scale[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\n  mat4 modelTranslation;\n  modelTranslation[0] = vec4(1.0, 0.0, 0.0, 0.0);\n  modelTranslation[1] = vec4(0.0, 1.0, 0.0, 0.0);\n  modelTranslation[2] = vec4(0.0, 0.0, 1.0, 0.0);\n  modelTranslation[3] = vec4(model[3].xyz, 1.0);\n\n  mat4 modelRotation;\n  modelRotation[0] = vec4(\n    model[0].x / scaleLength.x,\n    model[0].y / scaleLength.x,\n    model[0].z / scaleLength.x,\n    0.0\n  );\n  modelRotation[1] = vec4(\n    model[1].x / scaleLength.y, \n    model[1].y / scaleLength.y, \n    model[1].z / scaleLength.y,\n    0.0\n  );\n  modelRotation[2] = vec4(\n    model[2].x / scaleLength.z, \n    model[2].y / scaleLength.z, \n    model[2].z / scaleLength.z, \n    0.0\n  );\n  modelRotation[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\n  mat4 allTranslation =  modelTranslation * translation;\n  mat4 allScale = modelScale * scale;\n  mat4 allRotation = modelRotation;\n\n  return allRotation * allTranslation * allScale * vec4(position, 1.0);\n}\n"}}]);