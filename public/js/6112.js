"use strict";(self.webpackChunkdovotori=self.webpackChunkdovotori||[]).push([[1014,6112],{51014:(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});const r="\nattribute vec3 position;\nattribute vec2 texture;\nvarying vec2 fragTexture;\nuniform float flipY; // 1 ou -1\n\nvoid main() {\n  fragTexture = texture;\n  gl_Position = vec4(position.x, position.y * flipY, position.z, 1.0);\n}\n"},16112:(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});const r={vertex:t(51014).default,fragment:"\nprecision mediump float;\nvarying vec2 fragTexture;\nuniform sampler2D textureMap;\nuniform vec2 resolution;\nuniform float radius;\nuniform float angle;\nuniform vec2 center; // coor texture 0 Ã  1\n\nvoid main() {\n  vec2 newTexCoor = fragTexture;\n  float w = center.x - fragTexture.x;\n  float h = center.y - fragTexture.y;\n\tfloat distanceFromCenter = sqrt(w * w + h * h);\n  newTexCoor -= center;\n  if (distanceFromCenter < radius) {\n    float percent = (radius - distanceFromCenter) / radius;\n    float theta = percent * percent * angle * 8.0;\n    float s = sin(theta);\n    float c = cos(theta);\n    newTexCoor = vec2(dot(newTexCoor, vec2(c, -s)), dot(newTexCoor, vec2(s, c)));\n  }\n  newTexCoor += center;\n  gl_FragColor = texture2D(textureMap, newTexCoor);\n  \n  \n  // repere\n  // if (\n  //   fragTexture.y < center.y + 0.005 && fragTexture.y > center.y - 0.005 && \n  //   fragTexture.x < center.x + 0.005 && fragTexture.x > center.x - 0.005\n  // ) {\n\t//   gl_FragColor = vec4(1.0,0.0,0.0,1.0);\n  // } else {\n\t//   gl_FragColor = texture2D(textureMap, fragTexture);\n  // }\n}\n",attributes:["position","texture"],uniforms:["flipY","textureMap","center","radius","angle","resolution"]}}}]);