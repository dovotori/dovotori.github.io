import{PI}from"../utils";import vertex from"./basicVertex";const fragment=`\nprecision mediump float;\n\nuniform sampler2D textureMap;\nuniform float time;\n\nvarying vec2 fragTexture;\n\n${PI}\n\nvoid main() {\n\tvec2 p = fragTexture * 2.0 - 1.0;\n  float a = atan(p.y, p.x);\n  float r = pow(pow(p.x * p.x, 4.0) + pow(p.y * p.y, 4.0), 1.0 / 8.0);\n  \n  // index texture by (animated inverse) radious and angle\n  vec2 uv = vec2( 0.3 / r + 0.2 * time, a / PI);\n\n  // vec3 col =  texture2D(textureMap, uv).xyz;\n  vec3 col =  vec3(cos(uv.x), 0.0, 0.0);\n  // darken at the center    \n  col = col * r;\n\tgl_FragColor = vec4(col, 1.0);\n}\n`;export default{vertex,fragment,attributes:["position","texture"],uniforms:["flipY","textureMap","time"]};