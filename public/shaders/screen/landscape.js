import{funcGradiant,funcGrain}from"../utils";import{polygon,rect}from"../utils/shapes";import vertex from"./basicVertex";const fragment=`\nprecision mediump float;\n\nuniform float time;\n\nvarying vec2 fragTexture;\n\n#define NB_MOUNTAINS 10\n#define NB_CLOUDS 1\n\n${funcGrain}\n${funcGradiant}\n${rect}\n${polygon}\n\nvec4 drawMountains(vec4 color, float size, float speed) {\n  vec4 traingleColor1 = vec4(75.0 / 255.0, 68.0 / 255.0, 141.0 / 255.0, 1.0);\n  vec4 traingleColor2 = vec4(34.0 / 255.0, 29.0 / 255.0, 86.0 / 255.0, 1.0);\n\n  vec2 trianglePosition = (vec2(1.0) - fragTexture);\n  float defilement = tan(time * speed);\n\n  trianglePosition.x = trianglePosition.x - defilement;\n  trianglePosition.y = trianglePosition.y + 0.5;\n  float triangle = polygon(trianglePosition, 3, size);\n\n  if (triangle != 0.0) {\n    return funcGradiant(traingleColor1, traingleColor2, 1.0, 0.5, fragTexture.y);\n  }\n  return color;\n}\n\nvec4 drawClouds(vec4 color, float size, float speed, vec2 pos) {\n  float defilement = 1.0 - tan(time * speed);\n  float rect1 = rect(fragTexture, vec2(pos.x + defilement, pos.y), vec2(size, 0.01));\n  if (rect1 != 0.0) {\n    color = vec4(1.0);\n  }\n  return color;\n}\n\nvoid main() {\n  vec4 backColor1 = vec4(13.0 / 255.0, 7.1 / 255.0, 32.9 / 255.0, 1.0);\n  vec4 backColor2 = vec4(193.0 / 255.0, 2.0 / 255.0, 117.0 / 255.0, 1.0);\n  vec4 backColor3 = vec4(1.0, 146.0 / 255.0, 45.0 / 255.0, 1.0);\n\n  vec4 color = vec4(1.0);\n  if (fragTexture.y < 0.5) {\n    color = funcGradiant(backColor1, backColor2, 0.0, 0.5, fragTexture.y);\n  } else {\n    color = funcGradiant(backColor2, backColor3, 0.5, 1.0, fragTexture.y);\n  }\n  \n  for (int i = 1; i <= NB_MOUNTAINS; i++)  {\n    color = drawMountains(color, float(i) / (float(NB_MOUNTAINS) * 0.5), float(i) * 0.01);\n  }\n\n  for (int j = 0; j < 2; j++)  {\n    for (int i = 0; i < 3; i++)  {\n      color = drawClouds(\n        color, 0.3 + (float(i) * 0.02),\n        0.1,\n        vec2(float(j) * 0.5, 0.2 + float(j) * 0.2 + (float(i) * 0.02))\n      );\n    }\n  }\n\n  vec4 grain = funcGrain(fragTexture, 10.0 + time * 0.00004, 8.0);\n\n  gl_FragColor = color + grain;\n}\n`;export default{vertex,fragment,attributes:["position","texture"],uniforms:["flipY","time"]};