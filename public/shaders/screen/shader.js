import{rect,circle,polar,polygon,distanceField,concentricCircles,fluid,planet}from"../utils/shapes";import{funcMap,funcGradiant}from"../utils";const vertex="\nattribute vec3 position;\nattribute vec2 texture;\n\nvarying vec2 fragTexture;\n\nvoid main() {\n  fragTexture = texture;\n  gl_Position = vec4(position, 1.0);\n}\n",fragment=`\nprecision mediump float;\n\nuniform float time;\n\nvarying vec2 fragTexture;\n\n${funcMap}\n${distanceField}\n${polar}\n${polygon}\n${circle}\n${rect}\n${fluid}\n${planet}\n${concentricCircles}\n${funcGradiant}\n\nvoid main() {\n  vec4 color = vec4(0.0);\n  \n  // vec4 red = vec4(1.0, 0.0, 0.0, 1.0);\n  // vec4 green = vec4(0.0, 1.0, 0.0, 1.0);\n  // vec4 blue = vec4(0.0, 0.0, 1.0, 1.0);\n\n  // float rect1 = rect(fragTexture, vec2(0.1, 0.1), vec2(0.1, 0.1));\n  // float rect2 = rect(fragTexture, vec2(0.15, 0.15), vec2(0.1, 0.1));\n  // float circle1 = circle(fragTexture, vec2(0.1, 0.6), 0.1);\n\n  // if (rect1 == 1.0) {\n  //   color = red;\n  // }\n  // if (rect2 == 1.0) {\n  //   color = green;\n  // }\n  // if (circle1 == 1.0) {\n  //   color = blue;\n  // }\n\n\n  float dfield1 = distanceField(fragTexture, 10.0, 40.0);\n  // color = vec3(dfield1);\n  float polar1 = polar(fragTexture, vec2(0.6, 0.2), 10.0);\n  // color = vec3(polar1);\n  // float polygon1 = polygon(fragTexture, 3, 1.0);\n  // if (polygon1 != 0.0) {\n    // color = funcGradiant(vec4(1.0,1.0,0.0,1.0), vec4(1.0,0.0,0.0,0.0), 0.2, 0.8, fragTexture);\n  // }\n\n  // float distance = 10.0;\n  // float step = cos(time * 0.01) * 100.0;\n  // float circles = concentricCircles(fragTexture, distance, step);\n  // if (circles != 0.0) {\n  //   color = funcGradiant(vec4(1.0,1.0,0.0,1.0), vec4(1.0,0.0,0.0,0.0), 0.0, 1.0, fragTexture);\n  // }\n\n  // vec4 fluid1 = fluid(fragTexture, vec2(20.0), time * 0.1);\n  // vec4 gradiant1 = funcGradiant(\n  //   vec4(1.0,1.0,0.0,1.0), \n  //   vec4(1.0,0.0,0.0,0.0), \n  //   0.0, \n  //   1.0, \n  //   fragTexture\n  // );\n  // color = fluid1 * gradiant1;\n\n  color = planet(fragTexture, 0.7 + (cos(time * 0.1) * 0.2), vec2(time * 0.01));\n\n  gl_FragColor = color;\n}\n`;export default{vertex,fragment,attributes:["texture"],uniforms:["time"]};