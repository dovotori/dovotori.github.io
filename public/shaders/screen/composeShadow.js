import vertex from"./basicVertex";const fragment="\nprecision mediump float;\n\n#define CAP_MAX_DEPTH 0.99 // z limit to compute\n\nuniform sampler2D textureMap;\nuniform sampler2D shadowMap;\n\nvarying vec2 fragTexture;\n\nvoid main(void){\n  vec3 albedo = texture2D(textureMap, fragTexture).xyz;\n  float alpha = texture2D(textureMap, fragTexture).a;\n\n  float shadow = texture2D(shadowMap, fragTexture).r;\n\n  vec3 lighting = albedo * vec3(shadow);\n  \n  gl_FragColor = vec4(lighting, alpha);\n}\n";export default{vertex,fragment,attributes:["position","texture"],uniforms:["flipY","textureMap","shadowMap"]};