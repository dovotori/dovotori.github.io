const vertex="\nattribute vec2 texture;\n\nuniform mat4 projection;\nuniform mat4 view;\nuniform mat4 model;\nuniform sampler2D textureMap;\n\nvarying vec3 color;\n\nvoid main() {\n  vec3 particulePos = texture2D(textureMap, texture).xyz;\n  vec3 position = (particulePos * vec3(4.0)) - vec3(2.0);\n  \n  // gl_PointSize = 10.0; \t\n  gl_PointSize = 2.0 + step(1.0 - (1.0 / 64.0), position.x);\n  \n  gl_Position = projection * view * model * vec4(position, 1.0);\n\n  color = vec3(position.y * 0.45, 0.1, position.x * 0.755);\n}\n",fragment="\nprecision mediump float;\n\nvarying vec3 color;\n\nvoid main() {\n  gl_FragColor = vec4(color, 1.0);\n}\n";export default{vertex,fragment,attributes:["texture"],uniforms:["projection","model","view","textureMap"]};