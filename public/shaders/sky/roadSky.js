import getClouds from"./getClouds";import getSunSky from"./getSunSky";import vertex from"../screen/basicVertex";const fragment=`\nprecision mediump float;\n\nuniform vec2 resolution;\nuniform vec2 wind;\nuniform float time;\nuniform sampler2D textureMap;\n\n#define SKY_COLOR vec3(59.0 / 255.0, 176.0 / 255.0, 178.0 / 255.0)\n#define CLOUD_COLOR vec3(255.0 / 255.0, 255.0 / 255.0, 250.0 / 255.0)\n${getClouds}\n\n#define SUN_SKY_COLOR_1 vec3(13.0 / 255.0, 7.1 / 255.0, 32.9 / 255.0)\n#define SUN_SKY_COLOR_2 vec3(193.0 / 255.0, 2.0 / 255.0, 117.0 / 255.0)\n#define SUN_SKY_COLOR_3 vec3(97.0 / 255.0, 191.0 / 255.0, 193.0 / 255.0)\n#define SUN_COLOR vec3(255.0 / 255.0, 113.0 / 255.0, 45.0 / 255.0)\n#define SUN_INTENSITY 0.6\n${getSunSky}\n\nvarying vec2 fragTexture;\n\n\nvec3 getColor(vec2 p, vec3 rd) {\n  float sun = clamp(dot(sundir, rd), 0.0, 1.0);\n  vec3 color = mix(vec3(0.78, 0.78, 0.7), vec3(0.3, 0.4, 0.5), p.y * 0.5 + 0.5);\n  color += 0.5 * vec3(1.0, 0.5, 0.1) * pow(sun, 8.0);\n  return color;\n}\n\nvoid main() {\n  vec2 uv = -1.0 + 2.0 * fragTexture;\n  // vec3 color = getColor(uv, normalize(vec3(uv, 1.5)));\n\n  vec3 color = getSunSky(uv);\n\n  color = getClouds(textureMap, uv, time, color, wind);\n  gl_FragColor = vec4(color, 1.0);\n}\n`;export default{vertex,fragment,attributes:["position","texture"],uniforms:["flipY","textureMap","resolution","time","wind"]};