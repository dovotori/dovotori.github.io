import{funcMap}from"../utils";const vertex=`\nattribute float value;\nattribute float index;\nuniform mat4 projection;\nuniform mat4 model;\nuniform mat4 view;\nuniform int maxfrequency;\nuniform int length;\n\n${funcMap}\n\nvarying vec3 color;\n\nvoid main() {\n  float normalizeValue = value / float(maxfrequency);\n\n  float y = funcMap(normalizeValue, 0.0, 1.0, 0.0, 1.0);\n  float x = funcMap(index, 0.0, float(length), -1.0, 1.0);\n\n  vec3 position = vec3(x, y, 4.0);\n  color = position;\n  \n  gl_Position = projection * view * model * vec4(position, 1.0);\n}\n`,fragment="\nprecision mediump float;\n\nvarying vec3 color;\n\nvoid main() {\n  gl_FragColor = vec4(color, 1.0);\n}\n";export default{vertex,fragment,attributes:["value","index"],uniforms:["projection","model","view","length","maxfrequency"]};