import{uniformVertShadow,shadowLocations,fragment}from"../utils/shadow";const vertex=`\nattribute vec3 position;\nattribute vec3 normale;\n\nuniform mat4 projection;\nuniform mat4 view;\nuniform mat4 model;\nuniform mat3 normalMatrix;\n\n${uniformVertShadow}\n\nvarying vec3 fragPosition;\nvarying vec4 fragShadow;\nvarying vec3 fragNormale;\n\nvoid main() {\n  vec4 pos = view * model * vec4(position, 1.0);\n  fragShadow = bias * shadowProjection * shadowView * model * vec4(position, 1.0);\n  fragNormale = normalMatrix * normale;\n  fragPosition = normalize(pos.xyz);\n  gl_Position = projection * pos;\n}\n`;export default{vertex,fragment,attributes:["position","normale"],uniforms:["projection","model","view","normalMatrix","resolution"].concat(shadowLocations)};