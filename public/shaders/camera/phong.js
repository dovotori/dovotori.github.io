import{funcPhong}from"../utils/light";const vertex="\nattribute vec3 position;\nattribute vec3 normale;\nuniform mat4 projection;\nuniform mat4 model;\nuniform mat4 view;\nuniform mat3 normalMatrix;\n\nvarying vec3 fragPosition;\nvarying vec3 fragNormale;\n\nvoid main()\n{\n  fragPosition = normalize((view * model * vec4(position, 1.0)).xyz);\n  fragNormale = normalMatrix * normalize(normale);\n  gl_Position = projection * view * model * vec4(position, 1.0);\n}\n",fragment=`\nprecision mediump float;\nvarying vec3 fragPosition;\nvarying vec3 fragNormale;\n\nuniform vec3 ambiant;\nuniform vec3 diffuse;\nuniform vec3 specular;\nuniform float brillance; // de 0 Ã  infini\nuniform vec3 posLum;\nuniform vec3 posEye;\n\n${funcPhong}\n\nvoid main() {\n  gl_FragColor = vec4(phong(), 1.0);\n}\n`;export default{vertex,fragment,attributes:["position","normale"],uniforms:["projection","model","view","normalMatrix","ambiant","diffuse","specular","brillance","posLum","posEye"]};