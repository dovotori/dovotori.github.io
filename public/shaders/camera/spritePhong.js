import{uniformLights,addLightLocations,funcLightsColor}from"../utils/light";import{funcMap}from"../utils";const vertex=`\nattribute vec3 position;\nattribute vec3 normale;\nattribute vec2 texture;\n\nuniform mat4 projection;\nuniform mat4 model;\nuniform mat4 view;\nuniform mat3 normalMatrix;\nuniform float inverseX;\nuniform float spriteRefSize;\nuniform vec2 spriteUV;\nuniform vec2 spriteGrid;\nuniform vec2 spriteSize;\n\nvarying vec3 fragPosition;\nvarying vec2 fragTexture;\nvarying vec3 fragNormale;\n\n${funcMap}\n\nvoid main() {\n  fragPosition = normalize((view * model * vec4(position, 1.0)).xyz);\n  fragNormale = normalMatrix * normalize(normale);\n\n  vec2 relPos = spriteUV / spriteGrid;\n  vec2 relSize = spriteSize / spriteGrid;\n  float texX = funcMap(\n    texture.x,\n    0.0 + float(inverseX),\n    1.0 - float(inverseX),\n    relPos.x,\n    relPos.x + relSize.x\n  );\n\tfloat texY = funcMap(texture.y, 1.0, 0.0, relPos.y,  relPos.y + relSize.y);\n  fragTexture = vec2(texX, texY);\n  \n  float relW = 1.0 * (spriteSize.x / spriteRefSize);\n  float relH = 1.0 * (spriteSize.y / spriteRefSize);\n\n  float finalX = funcMap(position.x, -1.0, 1.0, -relW, relW);\n  float finalY = funcMap(position.y, -1.0, 1.0, -relH, relH);\n\n  // place le point de pivot en bas\n  // relH - (pivot.y  / spriteRefSize.y) - 1.0\n  float offsetY = relH - 1.0;\n  finalY += offsetY;\n\n  gl_Position = projection * view * model * vec4(finalX, finalY, position.z, 1.0);\n}\n`,fragment=`\nprecision mediump float;\nvarying vec3 fragPosition;\nvarying vec2 fragTexture;\nvarying vec3 fragNormale;\n\n${uniformLights}\n${funcLightsColor}\nuniform sampler2D textureMap;\n\nvoid main() {\n  vec4 ambiant = texture2D(textureMap, fragTexture);\n\n  vec3 color = funcLightsColor(\n    ambiant.xyz,\n    vec3(1.0,1.0,1.0),\n    vec3(1.0,1.0,1.0),\n    fragNormale,\n    fragPosition\n  );\n\n\tgl_FragColor = vec4(color, ambiant.w);\n\t// gl_FragColor = vec4(1.0,0.0,0.0,1.0);\n}\n`;export default{vertex,fragment,attributes:["position","texture","normale"],uniforms:["projection","model","view","normalMatrix","textureMap","spriteUV","spriteGrid","spriteSize","inverseX","spriteRefSize"].concat(addLightLocations())};