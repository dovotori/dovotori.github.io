import{uniformLights,addLightLocations,funcLightsColor}from"../utils/light";import{funcMap,PI}from"../utils";const vertex=`\nattribute vec3 position;\nattribute vec3 normale;\nattribute vec4 tangent;\nattribute vec2 texture;\n\nuniform mat4 projection;\nuniform mat4 model;\nuniform mat4 view;\nuniform mat3 normalMatrix;\nuniform float time;\nuniform sampler2D noiseMap;\nuniform sampler2D displacementMap;\n\nvarying vec3 fragPosition;\nvarying vec3 fragNormale;\nvarying vec2 fragTexture;\n\n${PI}\n${funcMap}\n\nvoid main() {\n  gl_PointSize = 2.0;\n\n  float noise = texture2D(noiseMap, texture + vec2(time * 0.005)).x;\n\n  float SIZE = 0.1;\n  float fromCenterY = funcMap(texture.y, 0.0, 1.0, -SIZE, SIZE);\n  float wave = 1.0 + (funcMap(cos(fromCenterY * time), -1.0, 1.0, 0.0, PI / 2.0) * 0.2);\n\n  float frequency = texture2D(displacementMap, texture).a;\n  float displacement = frequency + wave;\n  \n  vec3 newPosition = position + normale * displacement;\n  if (position.x == 0.0 && position.z == 0.0) {\n    newPosition = position;\n  }\n  \n  fragPosition = normalize((view * model * vec4(newPosition, 1.0)).xyz);\n  fragNormale = normalMatrix * normalize(normale * displacement);\n  fragTexture = texture;\n\n  gl_Position = projection * view * model * vec4(newPosition, 1.0);\n}\n`,fragment=`\nprecision mediump float;\nvarying vec3 fragPosition;\nvarying vec3 fragNormale;\nvarying vec2 fragTexture;\n\nuniform sampler2D colorMap;\nuniform vec4 color;\nuniform float rough; \nuniform float metal;\n\n${uniformLights}\n${funcLightsColor}\n\nvoid main() {\n  vec3 texColor = texture2D(colorMap, fragTexture).xyz;\n  vec3 phong = funcLightsColor(\n    texColor,\n    vec3(1.0,1.0,1.0),\n    vec3(1.0,1.0,1.0),\n    fragNormale,\n    fragPosition\n  );\n  gl_FragColor = vec4(phong * vec3(3.0), 1.0);\n}\n`;export default{vertex,fragment,attributes:["position","normale","texture","tangent"],uniforms:["projection","model","view","normalMatrix","noiseMap","colorMap","displacementMap","color","rough","metal","posLum","posEye","time"].concat(addLightLocations())};