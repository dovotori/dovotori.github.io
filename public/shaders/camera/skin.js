const MAX_JOINT_MAT=6,vertex="\nattribute vec3 position;\nattribute vec4 joint;\nattribute vec4 weight;\n\nuniform mat4 projection;\nuniform mat4 model;\nuniform mat4 view;\nuniform mat4 jointMat[6];\n\nvarying vec3 color;\n\nvoid main() {\n  mat4 skinMat =\n    weight.x * jointMat[int(joint.x)] +\n    weight.y * jointMat[int(joint.y)] +\n    weight.z * jointMat[int(joint.z)] +\n    weight.w * jointMat[int(joint.w)];\n  color = (weight).xyz;\n  gl_Position = projection * view * model * skinMat * vec4(position, 1.0);\n}\n",fragment="\nprecision mediump float;\nvarying vec3 color;\n\nvoid main() {\n  gl_FragColor = vec4(color, 1.0);\n}\n",getExtraLocations=()=>{const t=[];for(let n=0;n<6;n++)t.push(`jointMat[${n}]`);return t};export default{vertex,fragment,attributes:["position","joint","weight"],uniforms:["projection","model","view"].concat(getExtraLocations())};