import{uniformVertShadow,fragment,shadowLocations}from"../utils/shadow";import{locations,getNaturalHeight,getNormale}from"../utils/terrain";const vertex=`\nattribute vec3 position;\nuniform mat4 projection;\nuniform mat4 model;\nuniform mat4 view;\nuniform mat3 normalMatrix;\n\nuniform float fogStart;\nuniform float fogEnd;\n\n${uniformVertShadow}\n\n${getNaturalHeight}\n${getNormale}\n\nvarying vec3 fragPosition;\nvarying vec4 fragShadow;\nvarying vec3 fragNormale;\n\nvoid main() {\n  vec3 tranformed = position;\n\n  if (position.y == 0.0) {\n    vec2 coord = position.xz + moving;\n    tranformed.y = getNaturalHeight(coord);\n  }\n\n  vec4 pos = view * model * vec4(tranformed, 1.0);\n  fragShadow = bias * shadowProjection * shadowView * model * vec4(tranformed, 1.0);\n  fragNormale = normalMatrix * getNormale(position, tranformed);\n  fragPosition = normalize(pos.xyz);\n  gl_Position = projection * pos;\n}\n`;export default{vertex,fragment,attributes:["position"],uniforms:["projection","model","view","normalMatrix","resolution"].concat(locations).concat(shadowLocations)};