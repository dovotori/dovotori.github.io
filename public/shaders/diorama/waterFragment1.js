import{getFogAmount,fogUniforms}from"../utils/fog";import{uniformLights,funcLightsColor}from"../utils/light";export default`\nprecision mediump float;\n\nuniform sampler2D reflectMap;\nuniform sampler2D refractMap;\nuniform sampler2D normaleMap;\nuniform sampler2D distortionMap;\nuniform sampler2D depthMap;\n\n${uniformLights}\n${fogUniforms}\n\nvarying vec3 fragPosition;\nvarying vec3 fragColor;\nvarying vec2 fragTexture;\nvarying vec3 fragNormale;\nvarying vec4 fragClipPosition;\nvarying vec3 fragEyeDir;\nvarying vec2 fragMoving;\n\n${getFogAmount}\n${funcLightsColor}\n\nvoid main() {\n  vec3 waterColor = vec3(0.5, 0.6, 0.75);\n\n  vec2 tilingCoor = fragMoving + fragTexture * 4.0;\n\n  float correction = 0.205; // ?? coor to low\n  vec3 ndc = (fragClipPosition.xyz / fragClipPosition.w) / 2.0 + 0.5;\n  vec2 reflectCoor = vec2(ndc.x, 1.0 - ndc.y + correction);\n  vec2 refractCoor = vec2(ndc.x, ndc.y);\n\n  float fresnel = pow(dot(normalize(fragEyeDir), normalize(fragNormale)), 2.0);\n\n  vec2 distortionCoor1 = vec2(tilingCoor.x + fragMoving.x, tilingCoor.y);\n  vec2 distortionCoor2 = vec2(tilingCoor.x, tilingCoor.y + fragMoving.y);\n  vec2 distortion1 = texture2D(distortionMap, distortionCoor1).rg * 2.0 - 1.0;\n  vec2 distortion2 = texture2D(distortionMap, distortionCoor2).rg * 2.0 - 1.0;\n  vec2 distortion = distortion1 + distortion2;\n  distortion *= 0.004; // distorsion strength\n\n  reflectCoor += distortion;\n  refractCoor += distortion;\n\n  reflectCoor = clamp(reflectCoor, vec2(0.0001), vec2(0.9999));\n  refractCoor = clamp(refractCoor, vec2(0.0001), vec2(0.9999));\n\n  vec4 reflectColor = texture2D(reflectMap, reflectCoor);\n  vec4 refractColor = texture2D(refractMap, refractCoor);\n\n  vec2 normCoor = (tilingCoor * 2.0) + (fragMoving * 0.2);\n\n  vec3 normale = texture2D(normaleMap, normCoor).xyz;\n  normale = normalize(normale);\n\n  if (fragNormale.y <= 0.5) {\n    normale = fragNormale;\n  }\n\n  vec3 lightColor = funcLightsColor(\n    waterColor,\n    waterColor,\n    vec3(1.0),\n    normale,\n    fragPosition\n  );\n\n  vec4 color = mix(refractColor, reflectColor, fresnel);\n  float fogAmount = getFogAmount(fragClipPosition.xyz, fogStart, fogEnd);\n  vec4 finalColor = color + vec4(lightColor, 0.0); // spec light how to add ?\n  finalColor = mix(finalColor, fogColor, fogAmount);\n  // finalColor = vec4(normale, 1.0);\n\n  float depth = texture2D(depthMap, ndc.xy).r;\n\n  gl_FragColor = finalColor;\n  \n}\n`;